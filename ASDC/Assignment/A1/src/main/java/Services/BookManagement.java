package Services;

import Dao.Book;
import DriverClass.UtilFunctions;
import Log.LogWriter;
import Log.TxtLogWriter;
import Repositories.BookRepo;

import java.time.Year;
import java.util.List;

public class BookManagement{

    private UtilFunctions utilFunctions;
    private BookRepo bookRepo;
    private LogWriter logWriter;

    public BookManagement(UtilFunctions utilFunctions, BookRepo bookRepo){
        this.utilFunctions = utilFunctions;
        this.bookRepo = bookRepo;
        logWriter = TxtLogWriter.getInstance();
    }

    public boolean addBookToShelf(Book book) {

        if (validateBook(book)){
            if (!bookRepo.isBookAlreadyExist(book.getBookTitle())){
                if (bookRepo.addBook(book)){
                    System.out.println("Book is Successfully Added!");
                    logWriter.Write("Success", "BookManagement", "Book is successfully Added!");
                    return true;
                }
                else{
                    System.out.println("Something went wrong, Please try again later!");
                    logWriter.Write("Failure", "BookManagement", "Unsuccessful to add new book!");
                }
            }
            else {
                System.out.println("Book Already Exist!");
            }
        }

        return false;
    }

    public boolean updateBookDetails(Book book) {

        if (validateBook(book)){
            if (bookRepo.isBookAlreadyExist(book.getBookTitle())){
                if (bookRepo.editBook(book)){
                    System.out.println("Book is Successfully Updated!");
                    logWriter.Write("Success", "BookManagement", "Book is successfully Edited!");
                    return true;
                }
                else{
                    System.out.println("Something went wrong, Please try again later!");
                    logWriter.Write("Failure", "BookManagement", "Unsuccessful to edit book!");
                }
            }
            else {
                System.out.println("Book Doesn't Exist!");
            }
        }

        return false;
    }

    private boolean validateBook(Book book){

        //Book ID is autogenerated so no need to validate that field.
        if (book.getBookTitle() == null || book.getBookTitle().isEmpty()) {
            System.out.println("Error: Book title is null or empty.");
            return false;
        }
        if (book.getAuthorName() == null || book.getAuthorName().isEmpty()) {
            System.out.println("Error: Author name is null or empty.");
            return false;
        }
        if (book.getPublishedYear() < 1900 || book.getPublishedYear() > Year.now().getValue()) {
            System.out.println("Error: Published year is invalid.");
            return false;
        }
        if (book.getPublisherName() == null || book.getPublisherName().isEmpty()) {
            System.out.println("Error: Publisher name is null or empty.");
            return false;
        }
        if (book.getAuthorEmail() == null || book.getAuthorEmail().isEmpty() || !utilFunctions.isEmailValid(book.getAuthorEmail())) {
            System.out.println("Error: Author email is invalid.");
            return false;
        }
        if (book.getPublisherEmail() == null || book.getPublisherEmail().isEmpty() || !utilFunctions.isEmailValid(book.getPublisherEmail())) {
            System.out.println("Error: Publisher email is invalid.");
            return false;
        }
        if (book.getPublisherAddress() == null || book.getPublisherAddress().isEmpty()) {
            System.out.println("Error: Publisher address is null or empty.");
            return false;
        }

        return true;
    }

    public boolean removeBookFromShelf(String bookTitle) {

        if (bookTitle == null || bookTitle.isEmpty()){
            System.out.println("Book title is empty, please enter valid book title!");
            return false;
        }

        if (!bookRepo.isBookAlreadyExist(bookTitle)){
            System.out.println("Book Doesn't Exist!");
            return false;
        }

        if (bookRepo.deleteBook(bookTitle)){
            System.out.println("Book is Successfully Deleted!");
            logWriter.Write("Success", "BookManagement", "Book is successfully deleted!");
            return true;
        }
        else{
            System.out.println("Something went wrong, Please try again later!");
            logWriter.Write("Failure", "BookManagement", "Unsuccessful to delete book!");
            return false;
        }
    }

    public Book getBookDetails(String bookTitle) {

        if (bookTitle == null || bookTitle.isEmpty()){
            System.out.println("Book Title is empty, please enter valid book title!");
            return null;
        }

        if (!bookRepo.isBookAlreadyExist(bookTitle)){
            System.out.println("Book Doesn't Exist!");
            return null;
        }

        return bookRepo.getBook(bookTitle);
    }
}
